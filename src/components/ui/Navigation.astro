---
import HeaderLink from '../text/HeaderLink.astro'
import Hamburger from '../../assets/icons/hamburger.svg'
import Chevron from '../../assets/icons/chevron.svg'
import { NAVIGATION } from '../../consts'
import LogoFade from '../../assets/images/logo-fade.svg'
---

<nav id="main-nav" class="fixed top-0 left-0 right-0 z-50 bg-base-100/80 glass">
  <div class="navbar wrapper h-(--nav-height) px-(--site-padding-base)">
    <!-- Mobile navigation and logo -->
    <div class="navbar-start">
      <div class="flex items-center gap-2">
        <button
          id="mobile-nav-open"
          aria-label="open sidebar"
          class="lg:hidden btn btn-square btn-ghost"
        >
          <Hamburger class="w-6 h-6" />
        </button>
        <a href="/" aria-label="Home" title="Home">
          <h1>
            <span class="sr-only">Madison Lymphatics and Manual Therapy</span>

            <!-- logo -->
            <LogoFade class="max-w-24 md:max-w-28" />
          </h1>
        </a>
      </div>

      <!-- Drawer -->
      <input id="my-drawer-nav" type="checkbox" class="drawer-toggle" />
      <div class="drawer-side">
        <button id="mobile-nav-close" aria-label="close sidebar" class="drawer-overlay"></button>
        <ul class="menu min-h-full w-80 gap-2 border-r-2 border-base-200 bg-base-100 p-4">
          {
            NAVIGATION.map((link) => {
              if (link.children) {
                return (
                  <li aria-label={link.label}>
                    <span class="a menu-title text-base-content">{link.label}</span>
                    <ul class="menu gap-2">
                      {link.children.map((child) => (
                        <li class="text-base-content">
                          <HeaderLink href={child.href} aria-label={child.label}>
                            {child.label}
                          </HeaderLink>
                        </li>
                      ))}
                    </ul>
                  </li>
                )
              } else {
                return (
                  <li class="text-base-content">
                    <HeaderLink href={link.href} aria-label={link.label}>
                      {link.label}
                    </HeaderLink>
                  </li>
                )
              }
            })
          }
        </ul>
      </div>
    </div>

    <!-- Desktop navigation -->
    <div class="navbar-center hidden lg:flex">
      <ul class="menu menu-horizontal px-1">
        {
          NAVIGATION.map((link, index) => {
            if (link.children) {
              return (
                <li>
                  <button
                    popovertarget={`popover-${index}`}
                    style={`anchor-name:--anchor-${index}`}
                    class="flex items-center gap-1"
                  >
                    {link.label}
                    <Chevron class="w-4 h-4 transition-transform duration-200 ease-in-out" />
                  </button>
                  <ul
                    class="dropdown menu max-w-64 rounded-box shadow-sm bg-base-100/80 backdrop-blur-lg"
                    id={`popover-${index}`}
                    style={`position-anchor:--anchor-${index}`}
                    popover
                  >
                    {link.children.map((child) => (
                      <li>
                        <HeaderLink href={child.href}>{child.label}</HeaderLink>
                      </li>
                    ))}
                  </ul>
                </li>
              )
            } else {
              return (
                <li>
                  <HeaderLink href={link.href}>{link.label}</HeaderLink>
                </li>
              )
            }
          })
        }
      </ul>
    </div>

    <!-- CTA -->
    <div class="navbar-end">
      <a href="/contact" class="btn btn-primary">Book Now</a>
    </div>
  </div>
</nav>

<script>
  // Mobile navigation toggle function
  function toggleMobileNav() {
    const drawerToggle = document.getElementById('my-drawer-nav') as HTMLInputElement

    if (drawerToggle) {
      drawerToggle.checked = !drawerToggle.checked
    }
  }

  // Set up mobile navigation event listeners
  function initMobileNav() {
    const openButton = document.getElementById('mobile-nav-open')
    const closeButton = document.getElementById('mobile-nav-close')

    if (openButton) {
      openButton.addEventListener('click', toggleMobileNav)
    }

    if (closeButton) {
      closeButton.addEventListener('click', toggleMobileNav)
    }
  }

  // Find all buttons with popovertarget attribute
  const popoverButtons = document.querySelectorAll('button[popovertarget]')

  popoverButtons.forEach((button) => {
    // Find the chevron icon within this button (assumes it's a direct child SVG)
    const chevron = button.querySelector('svg')
    const popovertarget = button.getAttribute('popovertarget')

    // Only proceed if we have both chevron and popovertarget
    if (chevron && popovertarget) {
      const popover = document.getElementById(popovertarget)

      if (popover) {
        // Add transition classes to chevron if not already present
        if (!chevron.classList.contains('transition-transform')) {
          chevron.classList.add('transition-transform', 'duration-200')
        }

        // Listen for popover toggle events
        popover.addEventListener('toggle', () => {
          // Check if popover is open
          const isOpen = popover.matches(':popover-open')

          if (isOpen) {
            // Add rotate-180 class when popover opens
            chevron.classList.add('rotate-180')
          } else {
            // Remove rotate-180 class when popover closes
            chevron.classList.remove('rotate-180')
          }
        })
      }
    }
  })

  // Initialize all navigation functionality
  initMobileNav()
</script>
